<Window x:Class="SEToolbox.Views.WindowExplorer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:commands="clr-namespace:SEToolbox.Services"
        xmlns:controls="clr-namespace:SEToolbox.Controls"
        xmlns:views="clr-namespace:SEToolbox.Views"
        xmlns:vm="clr-namespace:SEToolbox.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:converters="clr-namespace:SEToolbox.Converters"
        Height="600" Width="800" ResizeMode="CanResizeWithGrip" WindowStartupLocation="CenterScreen" Icon="/SEToolbox;component/app.ico"
        commands:DialogCloser.DialogResult="{Binding CloseResult}"
        commands:DialogService.IsRegisteredView="True">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <commands:CommandAction Command="{Binding ClosingCommand}" EventArgs="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:EnumToResouceConverter x:Key="EnumToResouceConverter"/>
        <converters:BusyMouseConverter x:Key="BusyMouseConverter" />
        <converters:ResouceToImageConverter x:Key="ResouceToImageConverter"/>
        <converters:StringFormatMultiValueConverter x:Key="StringFormatConverter"/>
    </Window.Resources>
    <Window.Cursor>
        <Binding Path="IsBusy" Converter="{StaticResource BusyMouseConverter}"/>
    </Window.Cursor>
    <Window.Title>
        <MultiBinding Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}SE Toolbox - {0}">
            <Binding Path="ActiveWorld.SessionName"/>
        </MultiBinding>
    </Window.Title>
    <Grid IsEnabled="{Binding IsActive}">
        <DockPanel>
            <ToolBarPanel DockPanel.Dock="Top">
                <ToolBar>
                    <DockPanel Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ToolBarPanel}}}">
                        <DockPanel.Resources>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                            </Style>
                        </DockPanel.Resources>
                        <Button Command="{Binding OpenCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=folder}" Margin="0,0,2,0" />
                                <AccessText>_Open</AccessText>
                            </StackPanel>
                        </Button>
                        <Button Command="{Binding SaveCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=disk_blue}" Margin="0,0,2,0" />
                                <AccessText>_Save</AccessText>
                            </StackPanel>
                        </Button>
                        <Separator Style="{StaticResource DockPanelSeparator}" />
                        <Button Command="{Binding ReloadCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=refresh}" Margin="0,0,2,0" />
                                <AccessText>_Reload</AccessText>
                            </StackPanel>
                        </Button>
                        <Separator Style="{StaticResource DockPanelSeparator}" />
                        <Menu>
                            <MenuItem Header="_Import" Command="{Binding ImportCommand}">
                                <MenuItem.Icon>
                                    <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=import1}" />
                                </MenuItem.Icon>
                                <MenuItem Header="Asteroid" Command="{Binding ImportVoxelCommand}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=asteroid}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Image" Command="{Binding ImportImageCommand}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=photo_scenery}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="3D Model" Command="{Binding ImportModelCommand}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=cube_molecule}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="SandBox" Command="{Binding ImportSandBoxCommand}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=SpaceEngineers16}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                        </Menu>
                        <Separator Style="{StaticResource DockPanelSeparator}" />
                        <Button Command="{Binding AboutCommand}" HorizontalAlignment="Right">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=about}" Margin="0,0,2,0" />
                                <AccessText>_About</AccessText>
                            </StackPanel>
                        </Button>
                    </DockPanel>
                </ToolBar>
                <ToolBar Visibility="{Binding IsDebugger, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button Content="Clear" Command="{Binding ClearCommand}" />
                    <Button Content="Test" Command="{Binding TestCommand}" Visibility="{Binding IsDebugger, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </ToolBar>
            </ToolBarPanel>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem>
                    <views:ControlSaveState />
                </StatusBarItem>
                <Separator/>
                <StatusBarItem>
                    <views:ControlBaseState/>
                </StatusBarItem>
                <StatusBarItem>
                    <!-- placeholder to maintain correct height for text -->
                    <TextBlock />
                </StatusBarItem>
            </StatusBar>
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.ActiveWorld, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="40"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*" MinWidth="40"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <TabControl>
                        <TabItem Header="Craft/Objects">
                            <controls:SortableListView Grid.Row="2" Grid.ColumnSpan="2" DisplayMemberPath="ClassType" SelectionMode="Extended" ItemsSource="{Binding Structures}" SelectedValue="{Binding SelectedStructure, Mode=TwoWay}"
                            ColumnHeaderArrowUpTemplate="{StaticResource HeaderTemplateArrowUp}" ColumnHeaderArrowDownTemplate="{StaticResource HeaderTemplateArrowDown}">
                                <ListView.View>
                                    <GridView>
                                        <!--<GridViewColumn Header="Name" DisplayMemberBinding="{Binding EntityId}"/>-->
                                        <GridViewColumn Header="Type" Width="100" DisplayMemberBinding="{Binding ClassType, Converter={StaticResource EnumToResouceConverter}}"/>
                                        <GridViewColumn Header="Description" Width="150" DisplayMemberBinding="{Binding Description}"/>
                                        <GridViewColumn Header="Distance" Width="80" DisplayMemberBinding="{Binding PlayerDistance, StringFormat='{}{0:#,###0.0}'}"/>
                                    </GridView>
                                </ListView.View>
                                <ListView.InputBindings>
                                    <KeyBinding Key="Delete" Command="{Binding DeleteObjectCommand}" />
                                </ListView.InputBindings>
                                <i:Interaction.Behaviors>
                                    <!-- Custom behavior that synchronizes the selected items with the view models collection -->
                                    <commands:SynchronizeSelectedItems Selections="{Binding Selections}"/>
                                </i:Interaction.Behaviors>
                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Command="{Binding DeleteObjectCommand}">
                                            <MenuItem.Icon>
                                                <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=delete2}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Export" Command="{Binding ExportObjectCommand}">
                                            <MenuItem.Icon>
                                                <Image Width="16" Height="16" Source="{Binding Converter={StaticResource ResouceToImageConverter}, ConverterParameter=export}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </controls:SortableListView>
                        </TabItem>
                        <!--<TabItem Header="Properties">
                            
                        </TabItem>-->
                    </TabControl>
                </Grid>
                <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="4"/>
                <Grid Grid.Column="2">
                    <ContentControl Content="{Binding SelectedStructure}">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type vm:StructureCharacterViewModel}">
                                <views:ControlCharacter />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vm:StructureVoxelViewModel}">
                                <views:ControlVoxel />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vm:StructureCubeGridViewModel}">
                                <views:ControlCubeGrid />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vm:StructureFloatingObjectViewModel}">
                                <views:ControlFloatingObject />
                            </DataTemplate>
                            <!--<DataTemplate DataType="{x:Type vm:StructureBaseViewModel}">
                                <Label Content="nothing" />
                            </DataTemplate>-->
                        </ContentControl.Resources>
                    </ContentControl>
                </Grid>
            </Grid>
        </DockPanel>
        <controls:BusyIndicator Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />
    </Grid>
</Window>
